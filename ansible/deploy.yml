---
- name: Deploy Docker container on EC2
  hosts: ec2
  become: yes

  vars:
    IMAGE: "rahul0315/devops-nodejs-app:{{ GIT_COMMIT | default('latest') }}"
    CONTAINER_NAME: "devops-app"
    APP_PORT: 3000

  tasks:
    # ===== DOCKER INSTALLATION CHECK ===== #
    - name: Check if Docker is already installed
      command: docker --version
      register: docker_check
      ignore_errors: yes
      changed_when: false

    # ===== DOCKER INSTALLATION (ONLY IF MISSING) ===== #
    - name: Install Docker (only if not present)
      block:
        - name: Update APT package cache
          apt:
            update_cache: yes
            cache_valid_time: 3600

        - name: Install required system packages
          apt:
            name: "{{ item }}"
            state: present
          loop:
            - apt-transport-https
            - ca-certificates
            - curl
            - gnupg
            - lsb-release

        - name: Ensure keyring directory exists
          file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'

        - name: Add Docker's official GPG key
          get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.gpg
            mode: '0644'

        - name: Set up the Docker repository
          apt_repository:
            repo: >
              deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg]
              https://download.docker.com/linux/ubuntu
              {{ ansible_distribution_release }} stable
            state: present
            filename: docker

        - name: Install Docker Engine
          apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: latest
            update_cache: yes

        - name: Ensure Docker is running
          service:
            name: docker
            state: started
            enabled: yes
      when: docker_check.rc != 0
      tags: docker_install

    # ===== APPLICATION DEPLOYMENT ===== #
    - name: Try pulling tagged Docker image (with fallback)
      block:
        - name: Pull Docker image with tag
          docker_image:
            name: "{{ IMAGE }}"
            source: pull
      rescue:
        - name: Log warning and pull latest instead
          debug:
            msg: "Tag {{ IMAGE }} not found. Pulling latest..."
        - name: Pull latest tag as fallback
          docker_image:
            name: "rahul0315/devops-nodejs-app:latest"
            source: pull
        - set_fact:
            IMAGE: "rahul0315/devops-nodejs-app:latest"

    - name: Stop and remove old container if exists
      docker_container:
        name: "{{ CONTAINER_NAME }}"
        state: absent
        force_kill: yes

    - name: Run new container with pulled image
      docker_container:
        name: "{{ CONTAINER_NAME }}"
        image: "{{ IMAGE }}"
        state: started
        restart_policy: always
        ports:
          - "80:{{ APP_PORT }}"
        env:
          NODE_ENV: production
